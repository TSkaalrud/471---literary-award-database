# Generated by Django 3.1.4 on 2020-12-09 19:35

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('AuthorName', models.CharField(max_length=100)),
                ('Age', models.IntegerField()),
                ('Gender', models.CharField(max_length=100)),
                ('SexualOrientation', models.CharField(max_length=100)),
                ('Race', models.CharField(max_length=100)),
                ('Residency', models.CharField(max_length=100)),
                ('EstablishedVSEmerging', models.CharField(choices=[('M', 'Emerging'), ('S', 'Established')], max_length=1)),
                ('Citizenship', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='AuthorBased',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Race', models.CharField(max_length=100)),
                ('Gender', models.CharField(max_length=100)),
                ('SexualOrientation', models.CharField(max_length=100)),
                ('Residency', models.CharField(max_length=100)),
                ('Citizenship', models.CharField(max_length=100)),
                ('EstablishedVSEmerging', models.CharField(choices=[('M', 'Emerging'), ('S', 'Established')], max_length=1)),
                ('Age', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Donor',
            fields=[
                ('Name', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('PublicName', models.CharField(choices=[('T', 'True'), ('F', 'False')], max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='MEList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('List', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('PublisherName', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('location', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='PubWork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('WorkName', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ThirdParty',
            fields=[
                ('PartyName', models.CharField(max_length=100, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('Name', models.CharField(max_length=100, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='WorkBased',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Form', models.CharField(max_length=100)),
                ('Genre', models.CharField(max_length=100)),
                ('Setting', models.CharField(max_length=100)),
                ('NoOfWorks', models.IntegerField()),
                ('SubjectMatter', models.CharField(max_length=100)),
                ('PageCount', models.IntegerField()),
                ('RequiredSales', models.IntegerField()),
                ('PublicationLocation', models.CharField(max_length=100)),
                ('PrintRunSize', models.IntegerField()),
                ('PublishingRoute', models.CharField(max_length=100)),
                ('PublishingFormat', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Work',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('WorkName', models.CharField(max_length=100)),
                ('PageCount', models.IntegerField()),
                ('Genre', models.CharField(max_length=100)),
                ('Form', models.CharField(max_length=100)),
                ('Setting', models.CharField(max_length=100)),
                ('SubjectMatter', models.CharField(max_length=100)),
                ('PublishingRoute', models.CharField(max_length=100)),
                ('AuthorName', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.author')),
                ('PublisherName', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.publisher')),
            ],
        ),
        migrations.CreateModel(
            name='Sell',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Sales', models.DecimalField(decimal_places=2, max_digits=50)),
                ('V_Name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.vendor')),
                ('W_Name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.author')),
            ],
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PublishingFormat', models.CharField(max_length=100)),
                ('PrintRunSize', models.IntegerField()),
                ('AuthorName', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.author')),
                ('PublisherName', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.publisher')),
            ],
        ),
        migrations.CreateModel(
            name='LiteraryAward',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('AuthorAwardCNumber', models.IntegerField()),
                ('AwardCNumber', models.IntegerField()),
                ('WorkAwardCNumber', models.IntegerField()),
                ('Organization', models.CharField(max_length=100)),
                ('AwardFrequency', models.CharField(max_length=100)),
                ('MonetaryValue', models.IntegerField()),
                ('DonorName', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.donor')),
                ('NominatorName', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.thirdparty')),
            ],
        ),
        migrations.CreateModel(
            name='AwardBased',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('MutuallyExclusiveList', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.melist')),
            ],
        ),
        migrations.AddField(
            model_name='author',
            name='PublishedWorks',
            field=models.ManyToManyField(to='api.PubWork'),
        ),
        migrations.AddConstraint(
            model_name='work',
            constraint=models.UniqueConstraint(fields=('AuthorName', 'PublisherName', 'WorkName'), name='Work_key'),
        ),
        migrations.AddConstraint(
            model_name='sell',
            constraint=models.UniqueConstraint(fields=('W_Name', 'V_Name'), name='Sell_key'),
        ),
        migrations.AddConstraint(
            model_name='publication',
            constraint=models.UniqueConstraint(fields=('PublisherName', 'AuthorName'), name='Pub_key'),
        ),
        migrations.AddConstraint(
            model_name='literaryaward',
            constraint=models.UniqueConstraint(fields=('NominatorName', 'DonorName'), name='Lit_key'),
        ),
    ]
